from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = os.getenv("TELEGRAM_TOKEN", "7860332054:AAHhewKAqfQRML4eMoypQyOC62Kduz9BwiA")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üìö –ü–æ–º–æ—â—å –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º", "üßæ –®–ø–∞—Ä–≥–∞–ª–∫–∞"],
        ["üìù –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —É—á—ë–±–µ. –ß–µ–º –ø–æ–º–æ—á—å?",
        reply_markup=reply_markup
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text.lower()

    if user_text == "üìö –ø–æ–º–æ—â—å –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç: –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —Ñ–∏–∑–∏–∫–∞, –∏—Å—Ç–æ—Ä–∏—è –∏ —Ç.–¥.")
    elif user_text == "üßæ —à–ø–∞—Ä–≥–∞–ª–∫–∞":
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ —Ç–µ–º—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–∞ —à–ø–∞—Ä–≥–∞–ª–∫–∞. –ü—Ä–∏–º–µ—Ä: '–®–ø–∞—Ä–≥–∞–ª–∫–∞ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏: –∫–ª–µ—Ç–∫–∏'")
    elif user_text == "üìù –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        await update.message.reply_text("–°–ø—Ä–æ—Å–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ –ø–æ —à–∫–æ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ ‚Äî –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!")
    elif user_text == "üìÖ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
        await update.message.reply_text("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ. –•–æ—á–µ—à—å, –¥–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –æ –¥–æ–º–∞—à–∫–µ?")
    else:
        await update.message.reply_text("–Ø –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å.")

def main():
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    application = ApplicationBuilder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ Render
    if os.getenv('RENDER'):
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ Render Background Worker")
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã polling –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
        application.run_polling(
            poll_interval=3.0,
            timeout=20,
            drop_pending_updates=True,
            allowed_updates=Update.ALL_TYPES
        )
    else:
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ")
        application.run_polling()

if __name__ == "__main__":
    main()